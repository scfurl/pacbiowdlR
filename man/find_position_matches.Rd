% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fusionplot.R
\name{find_position_matches}
\alias{find_position_matches}
\title{Find position-based matches for fusion genes}
\usage{
find_position_matches(
  seq_fusions,
  db_fusions,
  position_columns = list(chr1 = "chr1", pos1 = "start1", chr2 = "chr2", pos2 = "start2"),
  gene_columns = list(gene1_chr = "gene1_chro", gene1_range = "gene1_txt", gene2_chr =
    "gene2_chro", gene2_range = "gene2_txt")
)
}
\arguments{
\item{seq_fusions}{Data frame of sequenced fusions with chromosome and breakpoint positions}

\item{db_fusions}{Data frame of database fusions with gene coordinates}

\item{position_columns}{Named list specifying the column names for positions in the sequenced data
(default: list(chr1="chr1", pos1="start1", chr2="chr2", pos2="start2"))}

\item{gene_columns}{Named list specifying the column names for gene positions in the database
(default: list(gene1_chr="gene1_chro", gene1_range="gene1_txt", gene2_chr="gene2_chro", gene2_range="gene2_txt"))}
}
\value{
Data frame of matches with details on match type
}
\description{
Identifies matches between sequenced fusion breakpoints and gene coordinates in a database.
Considers both direct and reciprocal matches (chr1→gene1 & chr2→gene2 or chr1→gene2 & chr2→gene1).
}
\examples{
# With default column names
matches <- find_position_matches(seq_fusions, db_fusions)

# With custom column specifications
matches <- find_position_matches(
  seq_fusions,
  db_fusions,
  position_columns = list(chr1="chrom1", pos1="position1", chr2="chrom2", pos2="position2"),
  gene_columns = list(gene1_chr="gene1_chromosome", gene1_range="gene1_coordinates",
                      gene2_chr="gene2_chromosome", gene2_range="gene2_coordinates")
)
}
