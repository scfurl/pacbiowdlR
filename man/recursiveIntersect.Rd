% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpg_reader.R
\name{recursiveIntersect}
\alias{recursiveIntersect}
\title{Recursively Compute the Intersection of Character Vectors}
\usage{
recursiveIntersect(charList)
}
\arguments{
\item{charList}{A list of character vectors.}
}
\value{
A character vector containing the common elements present in all vectors in \code{charList}.
  If \code{charList} is empty, an empty character vector is returned.
}
\description{
This function computes the intersection of a list of character vectors recursively.
}
\details{
The function handles the following cases:
  \itemize{
    \item If the list is empty, it returns an empty character vector.
    \item If the list contains only one vector, that vector is returned.
    \item For multiple vectors, it first computes the intersection of the first two vectors,
          then recursively computes the intersection of the result with the rest of the list.
  }
}
\examples{
# Example usage:
vectors_list <- list(c("A", "B", "C"), c("B", "C", "D"), c("C", "D", "E"))
common_elements <- recursiveIntersect(vectors_list)
print(common_elements)  # Expected output might be "C" if that is the only common element.
}
\keyword{internal}
