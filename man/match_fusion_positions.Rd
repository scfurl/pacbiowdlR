% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fusionplot.R
\name{match_fusion_positions}
\alias{match_fusion_positions}
\title{Match fusion genes by position}
\usage{
match_fusion_positions(
  seq_input,
  db_file,
  output_file = NULL,
  position_columns = list(chr1 = "chr1", pos1 = "start1", chr2 = "chr2", pos2 = "start2"),
  gene_columns = list(gene1_chr = "gene1_chro", gene1_range = "gene1_txt", gene2_chr =
    "gene2_chro", gene2_range = "gene2_txt"),
  verbose = TRUE
)
}
\arguments{
\item{seq_input}{Either a file path to sequenced fusions or a data frame containing fusion data
with chromosome and position information}

\item{db_file}{File path to the fusion database (can be gzipped, with .gz extension)}

\item{output_file}{Optional path to save results as CSV (NULL to skip saving)}

\item{position_columns}{Named list specifying the column names for positions in the sequenced data
(default: list(chr1="chr1", pos1="start1", chr2="chr2", pos2="start2"))}

\item{gene_columns}{Named list specifying the column names for gene positions in the database
(default: list(gene1_chr="gene1_chro", gene1_range="gene1_txt", gene2_chr="gene2_chro", gene2_range="gene2_txt"))}

\item{verbose}{Whether to print progress messages (default TRUE)}
}
\value{
Data frame of fusion matches with detailed position-based match information
}
\description{
Main function to identify matches between sequenced fusion breakpoints and gene coordinates
in a database. This function handles the entire workflow from parsing input files
to generating match results based on positional constraints.
}
\examples{
# Basic usage with default column names
matches <- match_fusion_positions(
  seq_input = "sequenced_fusions.txt",
  db_file = "fusion_database.txt"
)

# With custom column specifications
matches <- match_fusion_positions(
  seq_input = "sequenced_fusions.txt",
  db_file = "fusion_database.txt",
  position_columns = list(chr1="chrom1", pos1="position1", chr2="chrom2", pos2="position2"),
  gene_columns = list(gene1_chr="gene1_chromosome", gene1_range="gene1_coordinates",
                      gene2_chr="gene2_chromosome", gene2_range="gene2_coordinates")
)
}
